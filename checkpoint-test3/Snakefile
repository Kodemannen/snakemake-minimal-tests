from pathlib import Path

# Make input files:
inputfiles = [Path(f"input/{i}.txt") for i in range(10)]
Path("input").mkdir(exist_ok=True)
for f in inputfiles:
    f.touch()



def get_successes(wildcards):
    ck_output = checkpoints.process1.get(**wildcards).output[0]
    successes, = glob_wildcards(os.path.join(ck_output, "{num}.txt")) 

    return expand("output3/{num}.txt", num=successes)





rule all:
    input:
        "collected/sum.txt"




# Keep only files with even numbers:
checkpoint process1:
    input:
        inputfiles
    output:
        directory("output1")

    run:
        Path(output[0]).mkdir()

        for f in input:
            
            num = int(Path(f).stem)
        
            if num % 2 == 0:
                
                ting = Path(output[0])/Path(f).name
                with open(ting, "w") as out:
                    out.write(str(num**2) + "\n")

                

rule process2:
    input:
        "output1/{num}.txt"
    output:
        "output2/{num}.txt"
    run:
        # shell("mkdir output2 -p")
        with open(input[0], 'r') as f:
            num = eval(f.readline().strip())
        
        with open(output[0], 'w') as f:
            f.write(str(num)+"\n")
            



rule process3:
    input:
        "output2/{num}.txt"
    output:
        "output3/{num}.txt"
    run:
        # shell("mkdir output2 -p")
        with open(input[0], 'r') as f:
            num = eval(f.readline().strip())
        
        with open(output[0], 'w') as f:
            f.write(str(num % 30)+"\n")
            

rule collect:
    input:
        get_successes,
    output:
        "collected/sum.txt"
    run:
        sum = 0
        for inp in input:
            with open(inp, 'r') as f:
                num = eval(f.readline().strip())
                sum += num

        with open(output[0], 'w') as f:
            f.write(str(sum) + "\n") 

